/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/dayjs/dayjs.min.js":
/*!******************************************!*\
  !*** ../node_modules/dayjs/dayjs.min.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(t,e){ true?module.exports=e():undefined}(this,(function(){"use strict";var t=1e3,e=6e4,n=36e5,r="millisecond",i="second",s="minute",u="hour",a="day",o="week",f="month",h="quarter",c="year",d="date",l="Invalid Date",$=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,y=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:""+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?"+":"-")+m(r,2,"0")+":"+m(i,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},g="en",D={};D[g]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return g;if("string"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split("-");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},w=function(t,e){if(p(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=v;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||"0").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),l=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return O.w(n.toDate()[t].apply(n.toDate("s"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v="set"+(this.$u?"UTC":"");switch(h){case c:return r?l(1,0):l(31,11);case f:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+"Hours",0);case u:return $(v+"Minutes",1);case s:return $(v+"Seconds",2);case i:return $(v+"Milliseconds",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h="set"+(this.$u?"UTC":""),l=(n={},n[a]=h+"Date",n[d]=h+"Date",n[f]=h+"Month",n[c]=h+"FullYear",n[u]=h+"Hours",n[s]=h+"Minutes",n[i]=h+"Seconds",n[r]=h+"Milliseconds",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,l=this;r=Number(r);var $=O.p(h),y=function(t){var e=w(l);return O.w(e.date(e.date()+Math.round(t*r)),l)};if($===f)return this.set(f,this.$M+r);if($===c)return this.set(c,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||"YYYY-MM-DDTHH:mm:ssZ",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,"0")},d=n.meridiem||function(t,e,n){var r=t<12?"AM":"PM";return n?r.toLowerCase():r},$={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,"0"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,"0"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,"0"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,"0"),s:String(this.$s),ss:O.s(this.$s,2,"0"),SSS:O.s(this.$ms,3,"0"),Z:i};return r.replace(y,(function(t,e){return e||$[t]||i.replace(":","")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,v=this-M,g=O.m(this,M);return g=($={},$[c]=g/12,$[f]=g,$[h]=g/3,$[o]=(v-m)/6048e5,$[a]=(v-m)/864e5,$[u]=v/n,$[s]=v/e,$[i]=v/t,$)[y]||v,l?g:O.a(g)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[["$ms",r],["$s",i],["$m",s],["$H",u],["$W",a],["$M",f],["$y",c],["$D",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[g],w.Ls=D,w.p={},w}));

/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_hide_not_fited__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/hide-not-fited */ "./js/modules/hide-not-fited.js");
/* harmony import */ var _modules_ticket_choice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/ticket-choice */ "./js/modules/ticket-choice.js");



// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  Object(_modules_hide_not_fited__WEBPACK_IMPORTED_MODULE_0__["hideNotFited"])();
  Object(_modules_ticket_choice__WEBPACK_IMPORTED_MODULE_1__["ticketChoice"])();
});

/***/ }),

/***/ "./js/modules/hide-not-fited.js":
/*!**************************************!*\
  !*** ./js/modules/hide-not-fited.js ***!
  \**************************************/
/*! exports provided: hideNotFited */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hideNotFited", function() { return hideNotFited; });
var hideNotFited = function hideNotFited() {
  var elementsContainer = document.querySelectorAll('[data-hide-not-fited]');
  elementsContainer.length && elementsContainer.forEach(function (container) {
    var visibleBlock = container.querySelector('[data-visible-block]');
    var visibleElements = Array.from(visibleBlock.querySelectorAll('[data-fit-item]'));

    // функция для сравнения ширины контейнера с общей шириной дочерних элементов
    var compareWidth = function compareWidth() {
      var visibleBlockWidth = visibleBlock.offsetWidth;
      var allElementsWidth = visibleElements.reduce(function (acc, el) {
        var elWIdth = Math.floor(el.offsetWidth);
        var elMargin = +window.getComputedStyle(el).marginLeft.replace(/[^\d\+]/g, '');
        var fullElWidth = elWIdth + elMargin;
        acc += fullElWidth;
        return acc;
      }, 0);
      return visibleBlockWidth < allElementsWidth;
    };
    if (compareWidth()) {
      var hiddenBlockTemplate = "<div class=\"hidden-block\" data-hidden-block></div>";
      container.insertAdjacentHTML('beforeend', hiddenBlockTemplate);
      var hiddenBlock = container.querySelector('[data-hidden-block]');
      var hiddenElements = [];
      var isDropDownActive = false;

      // получаем данные для кнопки "ещё" из дата атрибута
      var buttonData = JSON.parse(visibleBlock.getAttribute('data-button'));
      var text = buttonData.text,
        className = buttonData.className;
      var showMoreBtnTemplate = "<button class=\"hidden-button ".concat(className, "\" data-show-more-btn>").concat(text, "</button>");

      // функция для вставки дом элементов в дом дерево
      var insertElements = function insertElements() {
        hiddenElements.push(visibleElements[visibleElements.length - 1]);
        hiddenBlock.prepend(hiddenElements[hiddenElements.length - 1]);
        visibleElements.length = visibleElements.length - 1;
        visibleBlock.innerHTML = '';
        visibleElements.forEach(function (el) {
          visibleBlock.append(el);
        });
      };

      // пока условие истинно вставляем элементы
      while (compareWidth()) {
        insertElements();
      }

      // вставляем элемент еще один раз, чтобы было место для кнопки "ещё"
      insertElements();

      // вставляем кнопку "ещё" в дом дерево
      visibleBlock.insertAdjacentHTML('beforeend', showMoreBtnTemplate);
      var showMoreBtn = container.querySelector('[data-show-more-btn]');
      container.style.width = 'fit-content';

      // добавляем обработчики на открытие/закрытие дропдауна
      var handleCloseDropdown = function handleCloseDropdown(evt) {
        if (!evt.target.closest(".".concat(className)) && isDropDownActive) {
          hiddenBlock.classList.toggle('active');
          isDropDownActive = false;
          window.removeEventListener('click', handleCloseDropdown);
        }
      };
      showMoreBtn.addEventListener('click', function () {
        hiddenBlock.classList.toggle('active');
        isDropDownActive = true;
        window.addEventListener('click', handleCloseDropdown);
      });
    }
  });
};


/***/ }),

/***/ "./js/modules/ticket-choice.js":
/*!*************************************!*\
  !*** ./js/modules/ticket-choice.js ***!
  \*************************************/
/*! exports provided: ticketChoice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ticketChoice", function() { return ticketChoice; });
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ "../node_modules/dayjs/dayjs.min.js");
/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var ROUTE = {
  AtoB: 'from A to B',
  BtoA: 'from B to A',
  AtoBthenBtoA: 'from A to B and back to A'
};
var AtoB = ROUTE.AtoB,
  BtoA = ROUTE.BtoA,
  AtoBthenBtoA = ROUTE.AtoBthenBtoA;
var TicketChoice = /*#__PURE__*/function () {
  function TicketChoice(routeContainer) {
    var _this$choosenValues;
    _classCallCheck(this, TicketChoice);
    this.routeContainer = routeContainer;
    this.timeContainerAtoB = document.querySelector('[data-time-a-to-b]');
    this.timeContainerBtoA = document.querySelector('[data-time-b-to-a]');
    this.button = document.querySelector('button');
    this.input = document.querySelector('input');
    this.tooltip = document.querySelector('span');
    this.message = document.querySelector('p');
    this.inputContainer = document.querySelector('[data-container]');
    this.timeZoneOffset = new Date().getTimezoneOffset() / -60;
    this.routeData = [{
      value: AtoB,
      text: AtoB
    }, {
      value: BtoA,
      text: BtoA
    }, {
      value: AtoBthenBtoA,
      text: AtoBthenBtoA
    }];
    this.timeData = {
      AtoB: [{
        value: '2021-08-21 18:00:00',
        text: "".concat(AtoB)
      }, {
        value: '2021-08-21 18:30:00',
        text: "".concat(AtoB)
      }, {
        value: '2021-08-21 18:45:00',
        text: "".concat(AtoB)
      }, {
        value: '2021-08-21 19:00:00',
        text: "".concat(AtoB)
      }, {
        value: '2021-08-21 19:15:00',
        text: "".concat(AtoB)
      }, {
        value: '2021-08-21 21:00:00',
        text: "".concat(AtoB)
      }],
      BtoA: [{
        value: '2021-08-21 18:45:00',
        text: "".concat(BtoA)
      }, {
        value: '2021-08-21 19:00:00',
        text: "".concat(BtoA)
      }, {
        value: '2021-08-21 19:15:00',
        text: "".concat(BtoA)
      }, {
        value: '2021-08-21 21:00:00',
        text: "".concat(BtoA)
      }, {
        value: '2021-08-21 21:50:00',
        text: "".concat(BtoA)
      }, {
        value: '2021-08-21 21:55:00',
        text: "".concat(BtoA)
      }]
    };
    this.choosenValues = (_this$choosenValues = {
      route: null
    }, _defineProperty(_this$choosenValues, AtoB, null), _defineProperty(_this$choosenValues, BtoA, null), _defineProperty(_this$choosenValues, "ticketsNumber", null), _this$choosenValues);
    this.tripDuration = 40;
    this.tripPriceOneDirection = 700;
    this.roundtripPrice = 1200;
    this.calculatedPrice = null;
    this.isAtoBrendered = false;
    this.isReadyForCalculate = false;
    this.addRouteChoice();
    this.setListners();
    this.renderRoutes();
  }

  // форматируем время с учетом часового пояса
  _createClass(TicketChoice, [{
    key: "formatTime",
    value: function formatTime(time) {
      return time && dayjs__WEBPACK_IMPORTED_MODULE_0___default()(time).add(this.timeZoneOffset, 'hour').format('HH:mm');
    }

    // шаблон селекта
  }, {
    key: "selectTemplate",
    value: function selectTemplate(id, name, data) {
      var _this = this;
      var dataId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
      return "<div class=\"select-container\" data-".concat(dataId, ">\n            <label for=\"").concat(id, "\" style=\"margin-right: 1rem;\">").concat(name, "</label>\n            <select name=\"").concat(id, "\" id=\"").concat(id, "\">\n                <option disabled selected>").concat(name, "</option>\n                ").concat(data.map(function (_ref) {
        var value = _ref.value,
          text = _ref.text;
        return "<option value=\"".concat(value, "\">").concat(text === value ? value : "".concat(_this.formatTime(value), " ").concat(text), "</option>");
      }).join(''), "\n            </div>\n        </select>");
    }

    // рендерит селект
  }, {
    key: "renderTime",
    value: function renderTime(route) {
      switch (route) {
        case AtoB:
          return this.renderAtoBSelect();
        case BtoA:
          return this.renderBtoASelect();
        case AtoBthenBtoA:
          return this.renderAtoBSelect();
      }
    }

    // работает с селектом выбора маршрута
  }, {
    key: "addRouteChoice",
    value: function addRouteChoice(evt) {
      for (var value in this.choosenValues) {
        this.choosenValues[value] = null;
      }
      if (evt) {
        this.choosenValues.route = evt.target.value;
        this.timeContainerAtoB.innerHTML = '';
        this.timeContainerBtoA.innerHTML = '';
        this.renderTime(evt.target.value);
        this.addTimeChoice();
        this.isAtoBrendered = false;
        this.message.innerHTML = '';
      }
    }

    // работает с селектом выбора времени и направления
  }, {
    key: "addTimeChoice",
    value: function addTimeChoice(evt) {
      if (!evt) return;
      switch (this.choosenValues.route) {
        case AtoB:
          return this.choosenValues[AtoB] = evt.target.value;
      }
      switch (this.choosenValues.route) {
        case BtoA:
          return this.choosenValues[BtoA] = evt.target.value;
      }
      switch (this.choosenValues.route) {
        case AtoBthenBtoA:
          if (evt.target.closest('[data-a-to-b]')) {
            this.choosenValues[AtoB] = evt.target.value;
            var filteredDates = this.wayBackFilterTime();
            this.timeContainerBtoA.innerHTML = '';
            this.renderBtoASelect(filteredDates);
          }
          if (evt.target.closest('[data-b-to-o]')) {
            this.choosenValues[BtoA] = evt.target.value;
          }
      }
    }

    // убирает не подходящие по времени значения обратного пути
  }, {
    key: "wayBackFilterTime",
    value: function wayBackFilterTime() {
      var _this2 = this;
      return this.timeData.BtoA.filter(function (_ref2) {
        var value = _ref2.value;
        var timePlusTripDuration = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(value).subtract(_this2.tripDuration, 'minute');
        return timePlusTripDuration.isAfter(_this2.choosenValues[AtoB]);
      });
    }

    // рендерит маршруты
  }, {
    key: "renderRoutes",
    value: function renderRoutes() {
      this.routeContainer.insertAdjacentHTML('beforeend', this.selectTemplate('route', 'Choose-route', this.routeData));
    }

    // рендерит селект из A в B
  }, {
    key: "renderAtoBSelect",
    value: function renderAtoBSelect() {
      !this.isAtoBrendered && this.timeContainerAtoB.insertAdjacentHTML('beforeend', this.selectTemplate("time-to-".concat(AtoB), "Choose time ".concat(AtoB), this.timeData.AtoB, 'a-to-b'));
      this.isAtoBrendered = true;
    }

    // рендерит селект из B в A
  }, {
    key: "renderBtoASelect",
    value: function renderBtoASelect() {
      var timeData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.timeData.AtoB;
      this.timeContainerBtoA.insertAdjacentHTML('beforeend', this.selectTemplate("time-to-".concat(BtoA), "Choose time ".concat(BtoA), timeData, 'b-to-o'));
    }

    // проверяте можно ли показывать поле выбора количества билетов и кнопку расчета
  }, {
    key: "calculationPrepare",
    value: function calculationPrepare() {
      var conditionOne = this.choosenValues.route === AtoB && this.choosenValues[AtoB] || this.choosenValues.route === BtoA && this.choosenValues[BtoA];
      var conditionTwo = this.choosenValues.route === AtoBthenBtoA && this.choosenValues[AtoB] && this.choosenValues[BtoA];
      if (conditionOne || conditionTwo) {
        this.isReadyForCalculate = true;
        this.inputContainer.style.visibility = 'visible';
      } else {
        this.isReadyForCalculate = false;
        this.inputContainer.style.visibility = 'hidden';
      }
    }

    // расчет цены
  }, {
    key: "calculate",
    value: function calculate() {
      var _this3 = this;
      this.choosenValues.ticketsNumber = this.input.value;
      if (!this.choosenValues.ticketsNumber) {
        this.tooltip.style.opacity = '1';
        return setTimeout(function () {
          return _this3.tooltip.style.opacity = '0';
        }, 3000);
      }
      if (this.choosenValues[AtoB] || this.choosenValues[BtoA]) {
        this.calculatedPrice = this.choosenValues.ticketsNumber * this.tripPriceOneDirection;
      }
      if (this.choosenValues[BtoA]) {
        this.calculatedPrice = this.choosenValues.ticketsNumber * this.roundtripPrice;
      }
    }

    // расчет длительности путешествия
  }, {
    key: "getTripDuration",
    value: function getTripDuration() {
      var getDuration = function getDuration(timeInminutes) {
        var hours = Math.floor(timeInminutes / 60);
        var minutes = timeInminutes % 60;
        return "".concat(hours > 0 ? hours : 0, ":").concat(minutes);
      };
      if (this.choosenValues.route === AtoB || this.choosenValues.route === BtoA) {
        return "".concat(this.tripDuration, " minutes");
      }
      if (this.choosenValues.route === AtoBthenBtoA) {
        var diff = dayjs__WEBPACK_IMPORTED_MODULE_0___default()(this.choosenValues[BtoA]).diff(this.choosenValues[AtoB], 'minute');
        return getDuration(diff);
      }
    }

    // сообщение о выбранных билетах
  }, {
    key: "createMessage",
    value: function createMessage() {
      return "You have choosen ".concat(this.choosenValues.ticketsNumber, " tickets by the route ").concat(this.choosenValues.route, ", cost ").concat(this.calculatedPrice, "$.\n        This trip will take you ").concat(this.getTripDuration(), ". \n        The ship is leaving at ").concat(this.formatTime(this.choosenValues[AtoB]) || this.formatTime(this.choosenValues[BtoA]), " ").concat(this.choosenValues.route === AtoBthenBtoA ? ", and arrive at ".concat(this.formatTime(this.choosenValues[BtoA])) : '', ".");
    }

    // добавляет обработчики событий
  }, {
    key: "setListners",
    value: function setListners() {
      var _this4 = this;
      this.timeContainerAtoB.addEventListener('change', function (evt) {
        _this4.addTimeChoice(evt);
        _this4.calculationPrepare();
      });
      this.timeContainerBtoA.addEventListener('change', function (evt) {
        _this4.addTimeChoice(evt);
        _this4.calculationPrepare();
      });
      this.routeContainer.addEventListener('change', function (evt) {
        _this4.addRouteChoice(evt);
        _this4.calculationPrepare();
      });
      this.button.addEventListener('click', function (evt) {
        evt.preventDefault();
        _this4.calculate();
        _this4.message.innerHTML = '';
        _this4.message.textContent = _this4.createMessage();
      });
    }
  }]);
  return TicketChoice;
}();
var ticketChoice = function ticketChoice() {
  var routeContainer = document.querySelector('[data-route]');
  if (!routeContainer) return;
  new TicketChoice(routeContainer);
};


/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map